# Generated by Django 4.2.10 on 2025-09-03 20:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("access", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AssignmentGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dv_assignment_group",
                    models.CharField(
                        help_text="Nome da fila de atendimento", max_length=50
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                (
                    "empresa",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="access.empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Assignment Group",
                "verbose_name_plural": "Assignments Groups",
                "db_table": "d_assignment_group",
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.CharField(
                        help_text="ID da Empresa",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "dv_company",
                    models.CharField(help_text="Nome do Cliente", max_length=50),
                ),
                (
                    "u_cnpj",
                    models.CharField(
                        blank=True,
                        help_text="CNPJ do Cliente",
                        max_length=14,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "d_company",
            },
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.CharField(
                        help_text="ID do Contrato",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "dv_contract",
                    models.CharField(help_text="Nome do Contrato", max_length=150),
                ),
            ],
            options={
                "db_table": "d_contract",
            },
        ),
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        help_text="Número do chamado no ServiceNow",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "resolved_by",
                    models.CharField(
                        blank=True,
                        help_text="ID Do analista",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "assignment_group",
                    models.CharField(
                        blank=True,
                        help_text="Grupo de atendimento",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "opened_at",
                    models.DateTimeField(help_text="Data da Abertura do Ticket"),
                ),
                (
                    "closed_at",
                    models.DateTimeField(
                        blank=True, help_text="Data do fechamento do ticket", null=True
                    ),
                ),
                (
                    "contract",
                    models.CharField(
                        blank=True,
                        help_text="ID Do Contrato",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "sla_atendimento",
                    models.BooleanField(
                        blank=True,
                        help_text="Identifica se o SLA de atendimento foi atendido.",
                        null=True,
                    ),
                ),
                (
                    "sla_resolucao",
                    models.BooleanField(
                        blank=True,
                        help_text="Identifica se o SLA de resolução foi atendido.",
                        null=True,
                    ),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True, help_text="ID Do Cliente", max_length=255, null=True
                    ),
                ),
                (
                    "u_origem",
                    models.CharField(
                        blank=True,
                        help_text="Torre de atendimento",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "dv_u_categoria_da_falha",
                    models.CharField(
                        blank=True,
                        help_text="Categoria da falha",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "dv_u_sub_categoria_da_falha",
                    models.CharField(
                        blank=True,
                        help_text="Sub Categoria da falha",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "dv_u_detalhe_sub_categoria_da_falha",
                    models.CharField(
                        blank=True,
                        help_text="Detalhe da SubCategoria da falha",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Incident",
                "verbose_name_plural": "Incidents",
                "db_table": "f_incident",
            },
        ),
        migrations.CreateModel(
            name="SortedTicket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mes_ano",
                    models.CharField(
                        help_text="Data do sorteio do ticket para controle. Relacionada à data do fechamento do incidente. Formato: YYYY-MM",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="O formato deve ser YYYY-MM",
                                regex="^\\d{4}-(?:0[1-9]|1[0-2])$",
                            )
                        ],
                    ),
                ),
                (
                    "incident",
                    models.ForeignKey(
                        help_text="ID Do incidente",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sorted_tickets",
                        to="dw_analytics.incident",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket Sorteado",
                "verbose_name_plural": "Tickets Sorteados",
                "db_table": "d_sorted_ticket",
            },
        ),
        migrations.CreateModel(
            name="ResolvedBy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dv_resolved_by",
                    models.CharField(help_text="Nome do Analista", max_length=80),
                ),
                (
                    "assignment_group",
                    models.ManyToManyField(
                        help_text="Filas que o analista atende",
                        related_name="resolved_by",
                        to="dw_analytics.assignmentgroup",
                        verbose_name="Assignment Group",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resolved BY",
                "verbose_name_plural": "Resolved BY",
                "db_table": "d_resolved_by",
            },
        ),
    ]
